AllCops:
  DisplayCopNames: true
  TargetRubyVersion: 2.4
  Exclude:
      - vendor/**/*
      - config.ru

Metrics/AbcSize:
  Max: 35

Metrics/BlockLength:
  Exclude:
    - spec/**/*

# Configuration parameters: CountComments.
Metrics/ClassLength:
  Max: 150

# Configuration parameters: AllowHeredoc, AllowURI, URISchemes.
# URISchemes: http, https
Metrics/LineLength:
  Max: 125

# Offense count: 5
# Configuration parameters: CountComments.
Metrics/MethodLength:
  Max: 32

Metrics/CyclomaticComplexity:
  Max: 10
# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: braces, no_braces, context_dependent
Style/BracesAroundHashParameters:
  Enabled: false

Style/Documentation:
  Enabled: false

# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles, IndentationWidth.
# SupportedStyles: special_inside_parentheses, consistent, align_braces
Style/IndentHash:
  EnforcedStyle: consistent

Style/DoubleNegation:
  Enabled: true

Style/FrozenStringLiteralComment:
  Enabled: false

Style/ModuleFunction:
  Enabled: false

Style/StringLiterals:
  Description: 'Checks if uses of quotes match the configured preference.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#consistent-string-literals'
  Enabled: true
  EnforcedStyle: double_quotes
  SupportedStyles:
    - single_quotes
    - double_quotes

# Cop supports --auto-correct.
Style/NumericLiterals:
  MinDigits: 15

# Cop supports --auto-correct.
# Configuration parameters: AllowAsExpressionSeparator.
Style/Semicolon:
  AllowAsExpressionSeparator: true

# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyleForMultiline, SupportedStyles.
# SupportedStyles: comma, consistent_comma, no_comma
Style/TrailingCommaInLiteral:
  EnforcedStyleForMultiline: comma

# Cop supports --auto-correct.
# Configuration parameters: SupportedStyles, MinSize, WordRegex.
# SupportedStyles: percent, brackets
Style/WordArray:
  EnforcedStyle: percent

Style/SignalException:
  EnforcedStyle: semantic
